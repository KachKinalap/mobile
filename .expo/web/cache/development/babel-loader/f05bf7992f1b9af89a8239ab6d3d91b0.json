{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useFetching = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar useFetching = function useFetching(callback) {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var fetching = function _callee() {\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setIsLoading(true);\n            _context.next = 4;\n            return _regenerator.default.awrap(callback());\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            setError(_context.t0.message);\n\n          case 9:\n            _context.prev = 9;\n            setIsLoading(false);\n            return _context.finish(9);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6, 9, 12]], Promise);\n  };\n\n  return [fetching, isLoading, error];\n};\n\nexports.useFetching = useFetching;","map":{"version":3,"sources":["D:/My/WEbSProjects/mobileApp/src/hooks/useFetching.js"],"names":["useFetching","callback","isLoading","setIsLoading","error","setError","fetching","message"],"mappings":";;;;;;;;;;;AAAA;;AACO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AACrC,kBAAkC,qBAAS,KAAT,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA0B,qBAAS,EAAT,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,QAAQ,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAETH,YAAAA,YAAY,CAAC,IAAD,CAAZ;AAFS;AAAA,8CAGHF,QAAQ,EAHL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKTI,YAAAA,QAAQ,CAAC,YAAEE,OAAH,CAAR;;AALS;AAAA;AAOTJ,YAAAA,YAAY,CAAC,KAAD,CAAZ;AAPS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAWA,SAAO,CAACG,QAAD,EAAWJ,SAAX,EAAsBE,KAAtB,CAAP;AACH,CAhBM","sourcesContent":["import {useState} from 'react'\r\nexport const useFetching = (callback) => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n    const fetching = async () => {\r\n        try {\r\n            setIsLoading(true)\r\n            await callback()\r\n        } catch (e) {\r\n            setError(e.message)\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return [fetching, isLoading, error]\r\n}\r\n"]},"metadata":{},"sourceType":"script"}