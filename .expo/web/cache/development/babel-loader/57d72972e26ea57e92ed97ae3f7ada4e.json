{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _QuizButton = _interopRequireDefault(require(\"./UI/quizbutton/QuizButton\"));\n\nvar _useFetching3 = require(\"../hooks/useFetching\");\n\nvar _PostService = _interopRequireDefault(require(\"../API/PostService\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\My\\\\WEbSProjects\\\\mobileApp\\\\src\\\\components\\\\Available.jsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Available = function Available() {\n  var _ref = [],\n      quizzes = _ref[0],\n      setQuizzes = _ref[1];\n\n  var _useState = (0, _react.useState)({}),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      json = _useState2[0],\n      setJson = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(0),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      trigger = _useState4[0],\n      setTrigger = _useState4[1];\n\n  var _useFetching = (0, _useFetching3.useFetching)(function _callee() {\n    var response;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(_PostService.default.getAll());\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regenerator.default.awrap(setJson(response.data));\n\n          case 5:\n            parseQuizzes(json);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }),\n      _useFetching2 = (0, _slicedToArray2.default)(_useFetching, 3),\n      fetchJson = _useFetching2[0],\n      isLoading = _useFetching2[1],\n      error = _useFetching2[2];\n\n  (0, _react.useEffect)(function () {\n    fetchJson();\n  }, []);\n\n  var parseQuizzes = function parseQuizzes(mass) {\n    var quiz = {};\n    quiz.title = mass.payload.surveys[i].title;\n    quiz.count = mass.payload.surveys[i].questions.length;\n    setQuizzes([].concat((0, _toConsumableArray2.default)(quizzes), [quiz]));\n    setTrigger(1);\n  };\n\n  return _react.default.createElement(_reactNative.SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, trigger ? _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 22\n    }\n  }, console.log(quizzes.length)) : _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }\n  }, \"Loading...\", console.log(\"Not yet\")));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  avail: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  }\n});\n\nvar _default = Available;\nexports.default = _default;","map":{"version":3,"sources":["D:/My/WEbSProjects/mobileApp/src/components/Available.jsx"],"names":["Available","quizzes","setQuizzes","json","setJson","trigger","setTrigger","PostService","getAll","response","data","parseQuizzes","fetchJson","isLoading","error","mass","quiz","title","payload","surveys","i","count","questions","length","console","log","styles","StyleSheet","create","avail","display","flexDirection","flexWrap","alignItems","justifyContent"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;AACA,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AAIpB,aAA8B,EAA9B;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,kBAAwB,qBAAS,EAAT,CAAxB;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA8B,qBAAS,CAAT,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,qBAAsC,+BAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACvBC,qBAAYC,MAAZ,EADuB;;AAAA;AACxCC,YAAAA,QADwC;AAAA;AAAA,8CAGxCL,OAAO,CAACK,QAAQ,CAACC,IAAV,CAHiC;;AAAA;AAI9CC,YAAAA,YAAY,CAACR,IAAD,CAAZ;;AAJ8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ,CAAtC;AAAA;AAAA,MAAOS,SAAP;AAAA,MAAkBC,SAAlB;AAAA,MAA6BC,KAA7B;;AAUA,wBAAU,YAAM;AACZF,IAAAA,SAAS;AACZ,GAFD,EAEG,EAFH;;AAIA,MAAMD,YAAY,GAAG,SAAfA,YAAe,CAACI,IAAD,EAAQ;AAMzB,QAAIC,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,CAACC,KAAL,GAAaF,IAAI,CAACG,OAAL,CAAaC,OAAb,CAAqBC,CAArB,EAAwBH,KAArC;AACAD,IAAAA,IAAI,CAACK,KAAL,GAAaN,IAAI,CAACG,OAAL,CAAaC,OAAb,CAAqBC,CAArB,EAAwBE,SAAxB,CAAkCC,MAA/C;AACArB,IAAAA,UAAU,4CAAKD,OAAL,IAAce,IAAd,GAAV;AACAV,IAAAA,UAAU,CAAC,CAAD,CAAV;AACH,GAXD;;AA6BA,SAGQ,6BAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,OAAO,GACH,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOmB,OAAO,CAACC,GAAR,CAAYxB,OAAO,CAACsB,MAApB,CAAP,CADG,GAEH,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiBC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAjB,CAHT,CAHR;AAgBH,CAlED;;AAoEA,IAAMC,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC7BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAC,MADL;AAEHC,IAAAA,aAAa,EAAC,KAFX;AAGHC,IAAAA,QAAQ,EAAC,MAHN;AAIHC,IAAAA,UAAU,EAAC,QAJR;AAKHC,IAAAA,cAAc,EAAC;AALZ;AADsB,CAAlB,CAAf;;eAUelC,S","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {SafeAreaView, ScrollView, StyleSheet, Text} from 'react-native';\r\nimport QuizButton from './UI/quizbutton/QuizButton'\r\nimport {useFetching} from '../hooks/useFetching';\r\nimport PostService from '../API/PostService';\r\nconst Available = () => {\r\n\r\n\r\n\r\n    const [quizzes, setQuizzes] = []\r\n    const [json, setJson] = useState({})\r\n    const [trigger, setTrigger] = useState(0)\r\n    const [fetchJson, isLoading, error] = useFetching(async () => {\r\n        const response = await PostService.getAll()\r\n        // console.log(response.data)\r\n        await setJson(response.data)\r\n        parseQuizzes(json)\r\n        // console.log(json)\r\n        //console.log(\"dorova\", json[\"payload\"][\"surveys\"][0][\"description\"])\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchJson()\r\n    }, [])\r\n\r\n    const parseQuizzes = (mass)=>{\r\n        // for (let i = 0; i < mass.payload.total; i++) {\r\n        //     quizzes[i]={}\r\n        //     quizzes[i].total = mass.payload.surveys[i].title\r\n        //     quizzes[i].count = mass.payload.surveys[i].questions.length\r\n        // }\r\n        let quiz = {}\r\n        quiz.title = mass.payload.surveys[i].title\r\n        quiz.count = mass.payload.surveys[i].questions.length\r\n        setQuizzes([...quizzes, quiz])\r\n        setTrigger(1)\r\n    }\r\n\r\n    // <ScrollView contentContainerStyle={styles.avail}>\r\n    //     {quizzes.map((quiz=>\r\n    //     <QuizButton quizTitle={quiz.title} quizCount={quiz.count} key={quiz.title}/>\r\n    // ))}\r\n    // </ScrollView>\r\n\r\n    // const quizzes = [\r\n    //     {title:'First', count:30},\r\n    //     {title:'Социологическое исследование температуры тела курсантов', count:128},\r\n    //     {title:'Third', count:1},\r\n    //     {title:'Fourth', count:23436},\r\n    //     {title:'Fifth', count:42},\r\n    //     {title:'Sixth', count:23},\r\n    //     {title:'Seventh', count:23},\r\n    //     {title:'Eighth', count:23}\r\n    //     ]\r\n    return (\r\n        // json\r\n        // ?\r\n            <SafeAreaView>\r\n                {trigger\r\n                    ?<Text>{console.log(quizzes.length)}</Text>\r\n                    :<Text>Loading...{console.log(\"Not yet\")}</Text>\r\n\r\n                }\r\n\r\n            </SafeAreaView>\r\n        //:\r\n        // <SafeAreaView>\r\n        //          <Text>привет</Text>\r\n        //      </SafeAreaView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    avail: {\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        flexWrap:'wrap',\r\n        alignItems:'center',\r\n        justifyContent:'flex-start'\r\n    }\r\n})\r\n\r\nexport default Available;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}